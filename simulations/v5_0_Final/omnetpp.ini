[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s
**.cmdenv-log-level = info
**.result-recording-modes = all
# repeat = 10
seed-set = ${repetition}

image-path = ../../images

network = v5_0

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

**.scalar-recording = true
**.vector-recording = true

*.playgroundSizeX = 3500m
*.playgroundSizeY = 3500m
*.playgroundSizeZ = 50m


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.5s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("v5_0_Final.launchd.xml")

##########################################################
#                       RSU SETTINGS                     #
#                                                        #
#                                                        #
##########################################################
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

*.rsu[*].applType = "RSU"
*.rsu[*].appl.headerLength = 80 bit
*.rsu[*].appl.sendBeacons = false
*.rsu[*].appl.dataOnSch = false
*.rsu[*].appl.beaconInterval = 1s
*.rsu[*].appl.beaconUserPriority = 7
*.rsu[*].appl.dataUserPriority = 5
*.rsu[*].nic.phy80211p.antennaOffsetZ = 0 m

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 6Mbps
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -98dBm

*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
*.node[*].nic.phy80211p.antennaOffsetY = 0 m
*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m

# Specify if the app have to use auto ACKs between the messages
# MAC layer
# *.**.nic.mac1609_4.useAcks = ${useAck = true}
# *.**.useAcks = ${$useAck}
*.**.nic.mac1609_4.useAcks = true
# Application layer
*.veinsApp.useAcks = false

##########################################################
#                      App Layer                         #
##########################################################
*.node[*].applType = "VeinsApp"
*.node[*].appl.headerLength = 80 bit
*.node[*].appl.sendBeacons = false
*.node[*].appl.dataOnSch = false
*.node[*].appl.beaconInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 0
*.node[*].veinsmobility.setHostSpeed = false
*.node[*0].veinsmobility.accidentCount = 0
*.node[*0].veinsmobility.accidentStart = 73s
*.node[*0].veinsmobility.accidentDuration = 50s

##########################################################
#               Task offloading parameters               #
##########################################################
# These parameters sets the probability of a vehicle to remain available
# after them computation (Piggybacking)
*.node[*].appl.stillAvailableProbability = uniform(0, 1)
*.node[*].appl.stillAvailableThreshold = 0.5

# These parameters are for the current load of a vehicle and the 
# respective CPU frequency
*.node[*].appl.randomVehicleLoadActual = uniform(0, 1)
*.node[*].appl.randomCpuVehicleFreq = uniform(1.20GHz, 2.70GHz)

# The minimum vehicle load accepted by the bus
*.node[*].appl.minimumVehicleLoadActual = 700MB

# The common load of all vehicles except for bus
*.node[*].appl.commonVehicleLoad = 1GB

# Time in ms for the bus to wait for ok messages
*.node[*].appl.busWaitingTime = uniform(100ms, 200ms)

# Time in ms for the ok messages
*.node[*].appl.vehicleOkMessageTime = uniform(0ms, 100ms)

# Time in s for the bus sending help request
*.node[*].appl.randomTimeHelpMessage = uniform(30s, 40s)

[Config Default]

# The minimum vehicle load accepted by the bus
*.veinsApp.minimumVehicleLoadActual = 900MB

[Config WithBeaconing]
*.rsu[*].appl.sendBeacons = true
*.node[*].appl.sendBeacons = true

[Config WithChannelSwitching]
*.**.nic.mac1609_4.useServiceChannel = true
*.node[*].appl.dataOnSch = true
*.rsu[*].appl.dataOnSch = true

